#!/usr/bin/env python3
"""
V√≠ d·ª• s·ª≠ d·ª•ng TikTok Stats Analyzer v·ªõi Python code
"""

import asyncio
from tiktok_counter import TikTokStatsAnalyzer

async def analyze_channel(url: str):
    """
    Ph√¢n t√≠ch m·ªôt k√™nh TikTok
    """
    # Kh·ªüi t·∫°o analyzer
    analyzer = TikTokStatsAnalyzer(
        headless=True,      # Ch·∫°y ·∫©n browser
        max_scrolls=25      # Scroll 25 l·∫ßn ƒë·ªÉ load nhi·ªÅu video
    )
    
    # Scrape d·ªØ li·ªáu
    print(f"üîç ƒêang ph√¢n t√≠ch: {url}\n")
    result = await analyzer.scrape_channel(url)
    
    # Hi·ªÉn th·ªã b√°o c√°o
    analyzer.print_report(result)
    
    # L∆∞u k·∫øt qu·∫£
    await analyzer.save_to_json(result)
    await analyzer.save_to_csv(result)
    
    return result

async def compare_channels(urls: list):
    """
    So s√°nh nhi·ªÅu k√™nh
    """
    results = []
    
    for url in urls:
        analyzer = TikTokStatsAnalyzer(headless=True, max_scrolls=20)
        result = await analyzer.scrape_channel(url)
        results.append(result)
        print("\n" + "="*70 + "\n")
    
    # So s√°nh
    print("üìä SO S√ÅNH C√ÅC K√äNH:")
    print("="*70)
    
    for i, result in enumerate(results, 1):
        if 'error' not in result:
            channel_info = result['channel_info']
            stats = result['statistics']
            
            print(f"\n{i}. {channel_info.get('name', 'N/A')}")
            print(f"   Followers: {stats.get('total_views_formatted', 'N/A')}")
            print(f"   Total Views: {stats.get('total_views_formatted', 'N/A')}")
            print(f"   Videos: {stats.get('total_videos', 0)}")
            print(f"   Avg Views: {stats.get('average_views', 0):,}")

async def main():
    # V√≠ d·ª• 1: Ph√¢n t√≠ch 1 k√™nh
    print("="*70)
    print("V√ç D·ª§ 1: PH√ÇN T√çCH 1 K√äNH")
    print("="*70)
    
    channel_url = "https://www.tiktok.com/@tiktok"
    await analyze_channel(channel_url)
    
    # V√≠ d·ª• 2: So s√°nh nhi·ªÅu k√™nh
    # print("\n\n" + "="*70)
    # print("V√ç D·ª§ 2: SO S√ÅNH NHI·ªÄU K√äNH")
    # print("="*70)
    # 
    # channels_to_compare = [
    #     "https://www.tiktok.com/@channel1",
    #     "https://www.tiktok.com/@channel2",
    #     "https://www.tiktok.com/@channel3"
    # ]
    # await compare_channels(channels_to_compare)

if __name__ == "__main__":
    asyncio.run(main())

